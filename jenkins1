pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'myapp:latest'
    }

    stages {
        // Stage 1: Checkout code from Git
        stage('Checkout Code') {
            steps {
                checkout scm // This will checkout the latest code from the repository
            }
        }

        // Stage 2: Compile the code
        stage('Compile Code') {
            steps {
                script {
                    // Assuming you're using Maven or Gradle
                    sh 'mvn clean install' // for Maven
                    // Or use Gradle: sh './gradlew build'
                }
            }
        }

        // Stage 3: Run Unit Tests (JUnit)
        stage('Run Unit Tests') {
            steps {
                script {
                    // Run JUnit tests (adjust for your project)
                    sh 'mvn test' // for Maven
                    // Or use Gradle: sh './gradlew test'
                }
            }
        }

        // Stage 4: Security Dependency Check (OWASP Dependency-Check)
        stage('Security Dependency Check') {
            steps {
                script {
                    // You can use OWASP Dependency-Check for security scanning
                    sh 'dependency-check --project my_project --scan ./target' // for Maven
                    // Or use a security plugin like Snyk: sh 'snyk test'
                }
            }
        }

        // Stage 5: Build Docker Image
        stage('Build Docker Image') {
            steps {
                script {
                    // Build a Docker image from the Dockerfile
                    sh 'docker build -t $DOCKER_IMAGE .' // Replace with your Dockerfile location
                }
            }
        }

        // Stage 6: Push Docker Image to Registry (optional)
        stage('Push Docker Image') {
            steps {
                script {
                    // Optional: Push the Docker image to Docker Hub or other registry
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
